class HlsParser{constructor(s){this.inputUrl=s,this.isVod=!1,this.tags=[],this.chunksNumber=0,this.m3u8s=[],this.readFile(this.inputUrl)}async readFile(s){const t=await fetch(s).then(s=>s.blob()).catch(s=>{console.log(s)});this.processFile(t)}processFile(s){let t=this,e=[],i=[];const l=new FileReader;l.onload=function(s){if((e=s.target.result.split("\n")).find(s=>s.includes("#EXT-X-PLAYLIST-TYPE:VOD"))&&(t.isVod=!0),e.filter(s=>s.includes(".m3u8"))&&(i=e.filter(s=>s.includes(".m3u8")).map(s=>t.inputUrl.replace(t.inputUrl.split("/").pop(),s))),t.countChunks(e),t.tags.push(...e.map(s=>s.split(":")[0]).filter(s=>s.includes("#"))),i.length){const s=[...t.m3u8s].length;t.m3u8s.push(...i);for(let e=s;e<t.m3u8s.length;e++)t.readFile(t.m3u8s[e])}},l.readAsText(s)}countChunks(s){this.chunksNumber+=s.filter(s=>s.match(/#EXTINF/)).length}}
